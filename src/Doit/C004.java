package Doit;

public class C004 {
	/**
	 * @author 김은호
	 * @since 2023. 12. 14.
	 * @category 백준11660
	 * @class 실버1
	 * @see N *N 개의 수가 N*N크기의 표에 채워져 있다. 표안의 수 중(X,Y)에 서 (X',Y')까지의 합을 구하려한다. X는
	 *      행,Y는 열을 의미한다. 예를들어 N= 4이고, 표가 다음과 같이 채워져 있을 때를 살펴보자. (2,2)에서 (3,4)까지의 합을
	 *      구하면 (2,2)+(2,3)+(2,4)+(3,1)+(3,2)+(3,3)+(3,4) 이고, (4,4)에서 (4,4)까지 의 합을
	 *      구하면 (4,4) 만 출력된다. 표에 채워져 있는 수와 합을 구하는 연산이 주어졌을 때 이를 처리하는 프로그램을 작성하시오
	 * @input 1번째 줄에 표의 크기 N과 합을 구애햐하는 M이 주어진다. 1<=N<=1024,1<=M<=100,000. 2번째 줄부터
	 *        N개의 줄에는 표에 채워져 있는 수가 1행부터 차레대로 주어진다. 다음 M개의 줄에는 4개의 정수 X,Y,X',Y' 가
	 *        주어지며 (X,Y)에서 (X',Y') 의 합을 구해 출력해야 한다. 표에 채워져 있는 수는 1000보다 작거나 같은
	 *        자연수이다. (X<=X',Y<=Y')
	 * @output 총 M줄에 걸쳐 (X,Y)~(X',Y') 까지 합을 구하라
	 */
	/**
	 * @문제분석하기 이것도 다 입력받은다음 합을 구하고 또 거기서 입력받은 LOOP를 돌려서 합을 출력하기에는 시간제한 1초를 초과한다. 따라서
	 *         이번 문제도 구간합을 구해야한다. 구간합을 위해 입력과 받음 동시에 해당 좌표에 해당 값의 이전값이 저장된다. 그런데 이전
	 *         구간합과는 다르게 계층이 있어 이전 덧셈에 대해서 좌표가 이동하게된다. 따라서 입력받고 합산하는 로직과 좌표가 이동하는
	 *         로직을 구해야한다.
	 * @내용
	 */
	/**
	 * @슈도코드작성하기 <값입력>N을 받는다. 제곱을 시킨다. 그다음 2차원 배열을 선언해주는데 제곱된 값에서 행열 마다 +1을 해준다. 이것은
	 *           0을 넣기위함임,그리고 이전덧셈값을 나타낼 beforeSum 으로 long 타입을 선언한다. 2차원 행열을 위해 2중
	 *           포문을 사용해야한다. 첫번째 포문은 열, 두번째 레이어 포문은 행을 의미하도록 하며, 이안에서 부터 전부 더해간다.
	 *           <포인터>포인터이동의 경우는 (2,3)과 (3,2)인 경우 3-2,
	 * @슈도코드
	 */
	/**
	 * @결과
	 * @시간
	 */

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
